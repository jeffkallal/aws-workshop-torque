version: 2.1

orbs:
  cloudshell-colony: quali/cloudshell-colony@1.0.4
  jobs:
  build:
    docker:
      - image: 'circleci/ruby:2.4.1'
    steps:
      - colony/start-sandbox:
          artifacts: '{''app-frontend'':''latest/my-app.latest.tar.gz''}'
          blueprint: my-application
          inputs: '{''AWS_INSTANCE_TYPE'': ''m5.large''}'
          sandbox-name: test-sandbox
      - run:
          command: 'echo "Sandbox ID is ${SANDBOX_ID}"'
          name: Fetch Details
      - colony/end-sandbox:
          sandbox-id: SANDBOX_ID
workflows:
  easy:
    jobs:
      - build
      jobs:
  build-and-publish:
    docker:
      - image: 'circleci/ruby:2.4.1'
    steps:
      - checkout
      - run:
          command: |
            mkdir -p workspace
            tar -zcf my-webapp.latest.tar.gz -C my_app/ .
          name: Archive app
      - aws-s3/copy:
          from: my-webapp.latest.tar.gz
          to: 's3://my-webapp-artifacts/latest/'
orbs:
  aws-s3: circleci/aws-s3@1.0.11
  colony: quali/cloudshell-colony@1.0
version: 2.1
workflows:
  leadeasy:
    jobs:
      - build-and-publish
      - colony/sandbox:
          artifacts: '{''webapp-frontend'':''latest/my-webapp.latest.tar.gz''}'
          blueprint: my-web-application
          inputs: '{''AWS_INSTANCE_TYPE'': ''m5.large''}'
          name: Test Application
          requires:
            - build-and-publish
          sandbox-name: test-sandbox
          steps:
            - run: echo "Do some testing here"
            - run:
                command: >
                  echo "Getting application endpoint"

                  SB_ENDPOINT="SB_${SANDBOX_ID}_SHORTCUT_1"

                  echo "Checking ${!SB_ENDPOINT}"

                  curl --write-out "%{http_code}\n" --silent --output /dev/null
                  "${!SB_ENDPOINT}" 